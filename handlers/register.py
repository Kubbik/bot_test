from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from state.register import RegisterState
import re


async def start_register(message: Message, state: FSMContext):
    await message.answer('‚≠êÔ∏è–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é \n –î–ª—è –Ω–∞—á–∞–ª–∞ —Å–∫–∞–∂–∏—Ç–µ –∫–∞–∫ –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?')
    await state.set_state(RegisterState.regName)


async def register_name(message: Message, state: FSMContext):
    await message.answer(f'üòÄ –ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è {message.text} \n'
                         f'üìû –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã –±—ã—Ç—å –Ω–∞ —Å–≤—è–∑–∏ \n'
                         f'–§–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +7—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö—Ö \n\n'
                         f'‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –Ø —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Ñ–æ—Ä–º–∞—Ç—É')
    await state.update_data(regname=message.text)
    await state.set_state(RegisterState.regPhone)


# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
async def register_phone(message: Message, state: FSMContext):
    if (re.findall('^\+?[7][-\(]?\d{3}\)?-?\d{3}-?\d{2}-?\d{2}$', message.text)):
        await state.update_data(regphone=message.text)
        reg_data = await state.get_data()
        reg_name = reg_data.get('regname')
        reg_phone = reg_data.get('regphone')
        msg = f'–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è {reg_name} \n\n –í–∞—à –Ω–æ–º–µ—Ä: {reg_phone}'
        await message.answer(msg)
        await state.clear()
    else:
        await message.answer(f'–ù–æ–º–µ—Ä —É–∫–∞–∑–∞–Ω –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ')
